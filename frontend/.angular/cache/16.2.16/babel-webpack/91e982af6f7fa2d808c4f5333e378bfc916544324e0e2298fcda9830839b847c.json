{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../auth.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/form-field\";\nfunction LoginComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.error);\n  }\n}\nexport class LoginComponent {\n  constructor(router, authService) {\n    this.router = router;\n    this.authService = authService;\n    this.username = '';\n    this.password = '';\n    this.error = '';\n  }\n  login() {\n    this.error = '';\n    this.authService.login(this.username, this.password).subscribe({\n      next: res => {\n        // Aqui você pode salvar token ou dados do usuário se o backend retornar\n        this.router.navigate(['/dashboard']);\n      },\n      error: err => {\n        this.error = err.error?.detail || 'Usuário ou senha inválidos';\n      }\n    });\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 17,\n      vars: 3,\n      consts: [[1, \"login-container\"], [3, \"ngSubmit\"], [\"appearance\", \"outline\", 1, \"login-field\"], [\"matInput\", \"\", \"name\", \"username\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"name\", \"password\", \"type\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"login-error\", 4, \"ngIf\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"], [\"mat-button\", \"\", \"color\", \"accent\", \"routerLink\", \"/register\", \"type\", \"button\"], [1, \"login-error\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.login();\n          });\n          i0.ɵɵelementStart(4, \"mat-form-field\", 2)(5, \"mat-label\");\n          i0.ɵɵtext(6, \"Usu\\u00E1rio\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"input\", 3);\n          i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_7_listener($event) {\n            return ctx.username = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"mat-form-field\", 2)(9, \"mat-label\");\n          i0.ɵɵtext(10, \"Senha\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"input\", 4);\n          i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_11_listener($event) {\n            return ctx.password = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(12, LoginComponent_div_12_Template, 2, 1, \"div\", 5);\n          i0.ɵɵelementStart(13, \"button\", 6);\n          i0.ɵɵtext(14, \"Entrar\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"button\", 7);\n          i0.ɵɵtext(16, \"Cadastrar\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngModel\", ctx.username);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.password);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.error);\n        }\n      },\n      dependencies: [i3.NgIf, i1.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm, i5.MatButton, i6.MatInput, i7.MatFormField, i7.MatLabel],\n      styles: [\".login-container[_ngcontent-%COMP%] {\\n  max-width: 350px;\\n  margin: 60px auto;\\n  padding: 32px 24px;\\n  background: #fff;\\n  border-radius: 8px;\\n  box-shadow: 0 2px 16px rgba(0,0,0,0.08);\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n}\\n.login-field[_ngcontent-%COMP%] {\\n  width: 100%;\\n  margin-bottom: 18px;\\n}\\n.login-error[_ngcontent-%COMP%] {\\n  color: #d32f2f;\\n  margin-bottom: 12px;\\n} \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQix1Q0FBdUM7RUFDdkMsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixtQkFBbUI7QUFDckI7QUFDQTtFQUNFLFdBQVc7RUFDWCxtQkFBbUI7QUFDckI7QUFDQTtFQUNFLGNBQWM7RUFDZCxtQkFBbUI7QUFDckIiLCJzb3VyY2VzQ29udGVudCI6WyIubG9naW4tY29udGFpbmVyIHtcclxuICBtYXgtd2lkdGg6IDM1MHB4O1xyXG4gIG1hcmdpbjogNjBweCBhdXRvO1xyXG4gIHBhZGRpbmc6IDMycHggMjRweDtcclxuICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICBib3gtc2hhZG93OiAwIDJweCAxNnB4IHJnYmEoMCwwLDAsMC4wOCk7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuLmxvZ2luLWZpZWxkIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBtYXJnaW4tYm90dG9tOiAxOHB4O1xyXG59XHJcbi5sb2dpbi1lcnJvciB7XHJcbiAgY29sb3I6ICNkMzJmMmY7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTJweDtcclxufSAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","error","LoginComponent","constructor","router","authService","username","password","login","subscribe","next","res","navigate","err","detail","ɵɵdirectiveInject","i1","Router","i2","AuthService","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_3_listener","LoginComponent_Template_input_ngModelChange_7_listener","$event","LoginComponent_Template_input_ngModelChange_11_listener","ɵɵtemplate","LoginComponent_div_12_Template","ɵɵproperty"],"sources":["C:\\Users\\mathe\\Documents\\Kids\\Cadastro Local Kids\\frontend\\src\\app\\auth\\login\\login.component.ts","C:\\Users\\mathe\\Documents\\Kids\\Cadastro Local Kids\\frontend\\src\\app\\auth\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  username: string = '';\n  password: string = '';\n  error: string = '';\n\n  constructor(private router: Router, private authService: AuthService) {}\n\n  login() {\n    this.error = '';\n    this.authService.login(this.username, this.password).subscribe({\n      next: (res) => {\n        // Aqui você pode salvar token ou dados do usuário se o backend retornar\n        this.router.navigate(['/dashboard']);\n      },\n      error: (err) => {\n        this.error = err.error?.detail || 'Usuário ou senha inválidos';\n      }\n    });\n  }\n} ","<div class=\"login-container\">\n  <h2>Login</h2>\n  <form (ngSubmit)=\"login()\">\n    <mat-form-field appearance=\"outline\" class=\"login-field\">\n      <mat-label>Usuário</mat-label>\n      <input matInput [(ngModel)]=\"username\" name=\"username\" required />\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\" class=\"login-field\">\n      <mat-label>Senha</mat-label>\n      <input matInput [(ngModel)]=\"password\" name=\"password\" type=\"password\" required />\n    </mat-form-field>\n    <div *ngIf=\"error\" class=\"login-error\">{{ error }}</div>\n    <button mat-raised-button color=\"primary\" type=\"submit\">Entrar</button>\n    <button mat-button color=\"accent\" routerLink=\"/register\" type=\"button\">Cadastrar</button>\n  </form>\n</div> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}