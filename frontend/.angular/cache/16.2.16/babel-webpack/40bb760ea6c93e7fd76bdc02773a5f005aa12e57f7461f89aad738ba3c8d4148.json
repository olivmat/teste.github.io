{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/datepicker\";\nimport * as i10 from \"@angular/material/select\";\nimport * as i11 from \"@angular/material/core\";\nfunction PresencaModalComponent_mat_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const pessoa_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", pessoa_r4.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", pessoa_r4.name, \" \");\n  }\n}\nfunction PresencaModalComponent_mat_error_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Selecione uma pessoa \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PresencaModalComponent_mat_error_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Data \\u00E9 obrigat\\u00F3ria \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let PresencaModalComponent = /*#__PURE__*/(() => {\n  class PresencaModalComponent {\n    constructor(fb, http, snackBar, dialogRef, data) {\n      this.fb = fb;\n      this.http = http;\n      this.snackBar = snackBar;\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this.pessoas = [];\n      this.presencaForm = this.fb.group({\n        pessoa_id: ['', [Validators.required, Validators.min(1)]],\n        date: [new Date(), Validators.required],\n        observation: ['']\n      });\n    }\n    ngOnInit() {\n      this.carregarPessoas();\n    }\n    carregarPessoas() {\n      this.http.get('http://localhost:8000/people/').subscribe(data => this.pessoas = data, error => {\n        console.error('Erro ao carregar pessoas:', error);\n        this.showMessage('Erro ao carregar pessoas', true);\n      });\n    }\n    onSubmit() {\n      if (this.presencaForm.valid) {\n        const presencaData = this.presencaForm.value;\n        console.log('Dados da presença:', presencaData);\n        // Formatar a data para o formato esperado pelo backend\n        const data = new Date(presencaData.date);\n        const formattedData = {\n          person_id: parseInt(presencaData.pessoa_id),\n          date: data.toISOString().split('T')[0],\n          observation: presencaData.observation || null\n        };\n        console.log('Dados formatados:', formattedData);\n        this.http.post('http://localhost:8000/presences/', formattedData).subscribe(response => {\n          console.log('Presença registrada com sucesso:', response);\n          this.showMessage('Presença registrada com sucesso!');\n          this.dialogRef.close(true); // Fecha o modal e retorna true para indicar sucesso\n        }, error => {\n          console.error('Erro ao registrar presença:', error);\n          let errorMessage = 'Erro ao registrar presença';\n          if (error.error && error.error.detail) {\n            if (Array.isArray(error.error.detail)) {\n              errorMessage += ': ' + error.error.detail.map(err => err.msg).join(', ');\n            } else {\n              errorMessage += ': ' + error.error.detail;\n            }\n          }\n          this.showMessage(errorMessage, true);\n        });\n      }\n    }\n    onCancel() {\n      this.dialogRef.close();\n    }\n    showMessage(message, isError = false) {\n      this.snackBar.open(message, 'Fechar', {\n        duration: 5000,\n        panelClass: isError ? ['error-snackbar'] : ['success-snackbar']\n      });\n    }\n    static {\n      this.ɵfac = function PresencaModalComponent_Factory(t) {\n        return new (t || PresencaModalComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: PresencaModalComponent,\n        selectors: [[\"app-presenca-modal\"]],\n        decls: 27,\n        vars: 7,\n        consts: [[\"mat-dialog-title\", \"\"], [1, \"form-container\", 3, \"formGroup\"], [\"appearance\", \"fill\"], [\"formControlName\", \"pessoa_id\", \"required\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"date\", \"required\", \"\", 3, \"matDatepicker\"], [\"matSuffix\", \"\", 3, \"for\"], [\"picker\", \"\"], [\"matInput\", \"\", \"formControlName\", \"observation\", \"rows\", \"3\"], [\"align\", \"end\"], [\"mat-button\", \"\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"disabled\", \"click\"], [3, \"value\"]],\n        template: function PresencaModalComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"h2\", 0);\n            i0.ɵɵtext(1, \"Registrar Presen\\u00E7a\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(2, \"mat-dialog-content\")(3, \"form\", 1)(4, \"mat-form-field\", 2)(5, \"mat-label\");\n            i0.ɵɵtext(6, \"Pessoa\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(7, \"mat-select\", 3);\n            i0.ɵɵtemplate(8, PresencaModalComponent_mat_option_8_Template, 2, 2, \"mat-option\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(9, PresencaModalComponent_mat_error_9_Template, 2, 0, \"mat-error\", 5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(10, \"mat-form-field\", 2)(11, \"mat-label\");\n            i0.ɵɵtext(12, \"Data\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(13, \"input\", 6)(14, \"mat-datepicker-toggle\", 7)(15, \"mat-datepicker\", null, 8);\n            i0.ɵɵtemplate(17, PresencaModalComponent_mat_error_17_Template, 2, 0, \"mat-error\", 5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(18, \"mat-form-field\", 2)(19, \"mat-label\");\n            i0.ɵɵtext(20, \"Observa\\u00E7\\u00E3o\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(21, \"textarea\", 9);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(22, \"mat-dialog-actions\", 10)(23, \"button\", 11);\n            i0.ɵɵlistener(\"click\", function PresencaModalComponent_Template_button_click_23_listener() {\n              return ctx.onCancel();\n            });\n            i0.ɵɵtext(24, \"Cancelar\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(25, \"button\", 12);\n            i0.ɵɵlistener(\"click\", function PresencaModalComponent_Template_button_click_25_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵtext(26, \" Registrar \");\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            const _r2 = i0.ɵɵreference(16);\n            let tmp_2_0;\n            let tmp_5_0;\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"formGroup\", ctx.presencaForm);\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngForOf\", ctx.pessoas);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx.presencaForm.get(\"pessoa_id\")) == null ? null : tmp_2_0.hasError(\"required\"));\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"matDatepicker\", _r2);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"for\", _r2);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngIf\", (tmp_5_0 = ctx.presencaForm.get(\"date\")) == null ? null : tmp_5_0.hasError(\"required\"));\n            i0.ɵɵadvance(8);\n            i0.ɵɵproperty(\"disabled\", !ctx.presencaForm.valid);\n          }\n        },\n        dependencies: [i5.NgForOf, i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i6.MatFormField, i6.MatLabel, i6.MatError, i6.MatSuffix, i7.MatInput, i8.MatButton, i9.MatDatepicker, i9.MatDatepickerInput, i9.MatDatepickerToggle, i10.MatSelect, i11.MatOption, i4.MatDialogTitle, i4.MatDialogContent, i4.MatDialogActions],\n        styles: [\".form-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:16px;min-width:400px;padding:16px 0}mat-form-field[_ngcontent-%COMP%]{width:100%}mat-dialog-actions[_ngcontent-%COMP%]{padding:16px 0;margin:0}\"]\n      });\n    }\n  }\n  return PresencaModalComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}