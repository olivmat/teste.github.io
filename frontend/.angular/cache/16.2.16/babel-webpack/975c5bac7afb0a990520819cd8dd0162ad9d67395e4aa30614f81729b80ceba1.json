{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MomentDateAdapter, MAT_MOMENT_DATE_ADAPTER_OPTIONS } from '@angular/material-moment-adapter';\nexport const MY_FORMATS = {\n  parse: {\n    dateInput: 'DD/MM/YYYY'\n  },\n  display: {\n    dateInput: 'DD/MM/YYYY',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY'\n  }\n};\nexport let PersonModalComponent = class PersonModalComponent {\n  constructor(fb, personService, dialogRef, data) {\n    this.fb = fb;\n    this.personService = personService;\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this.isEditMode = false;\n    this.selectedFile = null;\n    this.previewUrl = null;\n    this.isSubmitting = false;\n    this.filterDate = date => {\n      if (!date) return false;\n      const today = new Date();\n      return date <= today;\n    };\n    this.personForm = this.fb.group({\n      name: ['', Validators.required],\n      birth_date: ['', Validators.required],\n      alergia: [''],\n      foto: [''],\n      responsavel: ['', Validators.required],\n      grau_parentesco: ['', Validators.required],\n      sexo: ['', Validators.required],\n      endereco: ['', Validators.required],\n      bairro: ['', Validators.required],\n      cidade: ['', Validators.required],\n      estado: ['', Validators.required],\n      cep: ['', Validators.required],\n      telefone: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      observacoes: ['']\n    });\n  }\n  ngOnInit() {\n    if (this.data?.person) {\n      this.isEditMode = true;\n      const person = this.data.person;\n      this.personForm.patchValue({\n        name: person.name,\n        birth_date: person.birth_date,\n        alergia: person.alergia,\n        foto: person.foto,\n        responsavel: person.responsavel,\n        grau_parentesco: person.grau_parentesco,\n        sexo: person.sexo,\n        endereco: person.endereco,\n        bairro: person.bairro,\n        cidade: person.cidade,\n        estado: person.estado,\n        cep: person.cep,\n        telefone: person.telefone,\n        email: person.email,\n        observacoes: person.observacoes\n      });\n      if (person.foto) {\n        this.previewUrl = person.foto;\n      }\n    }\n  }\n  onFileSelected(event) {\n    const input = event.target;\n    if (input.files && input.files[0]) {\n      this.selectedFile = input.files[0];\n      const reader = new FileReader();\n      reader.onload = e => {\n        this.previewUrl = e.target.result;\n      };\n      reader.readAsDataURL(this.selectedFile);\n    }\n  }\n  onSubmit() {\n    if (this.personForm.valid) {\n      this.isSubmitting = true;\n      const formValue = this.personForm.value;\n      // Prepare the payload\n      const payload = {\n        name: formValue.name,\n        birth_date: formValue.birth_date,\n        alergia: formValue.alergia,\n        foto: this.previewUrl,\n        responsavel: formValue.responsavel,\n        grau_parentesco: formValue.grau_parentesco,\n        sexo: formValue.sexo,\n        endereco: formValue.endereco,\n        bairro: formValue.bairro,\n        cidade: formValue.cidade,\n        estado: formValue.estado,\n        cep: formValue.cep,\n        telefone: formValue.telefone,\n        email: formValue.email,\n        observacoes: formValue.observacoes\n      };\n      if (this.isEditMode && this.data.person) {\n        this.personService.updatePerson(this.data.person.id, payload).subscribe({\n          next: () => {\n            this.dialogRef.close(true);\n          },\n          error: error => {\n            console.error('Error updating person:', error);\n            this.isSubmitting = false;\n          }\n        });\n      } else {\n        this.personService.createPerson(payload).subscribe({\n          next: () => {\n            this.dialogRef.close(true);\n          },\n          error: error => {\n            console.error('Error creating person:', error);\n            this.isSubmitting = false;\n          }\n        });\n      }\n    }\n  }\n  onCancel() {\n    this.dialogRef.close();\n  }\n};\nPersonModalComponent = __decorate([Component({\n  selector: 'app-person-modal',\n  templateUrl: './person-modal.component.html',\n  styleUrls: ['./person-modal.component.css'],\n  providers: [{\n    provide: DateAdapter,\n    useClass: MomentDateAdapter,\n    deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n  }, {\n    provide: MAT_DATE_FORMATS,\n    useValue: MY_FORMATS\n  }]\n}), __param(3, Inject(MAT_DIALOG_DATA))], PersonModalComponent);","map":{"version":3,"names":["Component","Inject","Validators","MAT_DIALOG_DATA","DateAdapter","MAT_DATE_FORMATS","MAT_DATE_LOCALE","MomentDateAdapter","MAT_MOMENT_DATE_ADAPTER_OPTIONS","MY_FORMATS","parse","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","PersonModalComponent","constructor","fb","personService","dialogRef","data","isEditMode","selectedFile","previewUrl","isSubmitting","filterDate","date","today","Date","personForm","group","name","required","birth_date","alergia","foto","responsavel","grau_parentesco","sexo","endereco","bairro","cidade","estado","cep","telefone","email","observacoes","ngOnInit","person","patchValue","onFileSelected","event","input","target","files","reader","FileReader","onload","e","result","readAsDataURL","onSubmit","valid","formValue","value","payload","updatePerson","id","subscribe","next","close","error","console","createPerson","onCancel","__decorate","selector","templateUrl","styleUrls","providers","provide","useClass","deps","useValue","__param"],"sources":["C:\\Users\\mathe\\Documents\\Kids\\Cadastro Local Kids\\frontend\\src\\app\\person-form\\person-modal\\person-modal.component.ts"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { PersonService } from '../../services/person.service';\nimport { Person } from '../../models/person.model';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MomentDateAdapter, MAT_MOMENT_DATE_ADAPTER_OPTIONS } from '@angular/material-moment-adapter';\nimport * as moment from 'moment';\n\nexport const MY_FORMATS = {\n  parse: {\n    dateInput: 'DD/MM/YYYY',\n  },\n  display: {\n    dateInput: 'DD/MM/YYYY',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n};\n\n@Component({\n  selector: 'app-person-modal',\n  templateUrl: './person-modal.component.html',\n  styleUrls: ['./person-modal.component.css'],\n  providers: [\n    {\n      provide: DateAdapter,\n      useClass: MomentDateAdapter,\n      deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n    },\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS }\n  ]\n})\nexport class PersonModalComponent implements OnInit {\n  personForm: FormGroup;\n  isEditMode: boolean = false;\n  selectedFile: File | null = null;\n  previewUrl: string | null = null;\n  isSubmitting = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private personService: PersonService,\n    public dialogRef: MatDialogRef<PersonModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { person: Person | null }\n  ) {\n    this.personForm = this.fb.group({\n      name: ['', Validators.required],\n      birth_date: ['', Validators.required],\n      alergia: [''],\n      foto: [''],\n      responsavel: ['', Validators.required],\n      grau_parentesco: ['', Validators.required],\n      sexo: ['', Validators.required],\n      endereco: ['', Validators.required],\n      bairro: ['', Validators.required],\n      cidade: ['', Validators.required],\n      estado: ['', Validators.required],\n      cep: ['', Validators.required],\n      telefone: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      observacoes: ['']\n    });\n  }\n\n  ngOnInit(): void {\n    if (this.data?.person) {\n      this.isEditMode = true;\n      const person = this.data.person;\n      this.personForm.patchValue({\n        name: person.name,\n        birth_date: person.birth_date,\n        alergia: person.alergia,\n        foto: person.foto,\n        responsavel: person.responsavel,\n        grau_parentesco: person.grau_parentesco,\n        sexo: person.sexo,\n        endereco: person.endereco,\n        bairro: person.bairro,\n        cidade: person.cidade,\n        estado: person.estado,\n        cep: person.cep,\n        telefone: person.telefone,\n        email: person.email,\n        observacoes: person.observacoes\n      });\n      if (person.foto) {\n        this.previewUrl = person.foto;\n      }\n    }\n  }\n\n  filterDate = (date: Date | null): boolean => {\n    if (!date) return false;\n    const today = new Date();\n    return date <= today;\n  }\n\n  onFileSelected(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    if (input.files && input.files[0]) {\n      this.selectedFile = input.files[0];\n      const reader = new FileReader();\n      reader.onload = (e: any) => {\n        this.previewUrl = e.target.result;\n      };\n      reader.readAsDataURL(this.selectedFile);\n    }\n  }\n\n  onSubmit(): void {\n    if (this.personForm.valid) {\n      this.isSubmitting = true;\n      const formValue = this.personForm.value;\n      \n      // Prepare the payload\n      const payload = {\n        name: formValue.name,\n        birth_date: formValue.birth_date,\n        alergia: formValue.alergia,\n        foto: this.previewUrl,\n        responsavel: formValue.responsavel,\n        grau_parentesco: formValue.grau_parentesco,\n        sexo: formValue.sexo,\n        endereco: formValue.endereco,\n        bairro: formValue.bairro,\n        cidade: formValue.cidade,\n        estado: formValue.estado,\n        cep: formValue.cep,\n        telefone: formValue.telefone,\n        email: formValue.email,\n        observacoes: formValue.observacoes\n      };\n\n      if (this.isEditMode && this.data.person) {\n        this.personService.updatePerson(this.data.person.id, payload).subscribe({\n          next: () => {\n            this.dialogRef.close(true);\n          },\n          error: (error) => {\n            console.error('Error updating person:', error);\n            this.isSubmitting = false;\n          }\n        });\n      } else {\n        this.personService.createPerson(payload).subscribe({\n          next: () => {\n            this.dialogRef.close(true);\n          },\n          error: (error) => {\n            console.error('Error creating person:', error);\n            this.isSubmitting = false;\n          }\n        });\n      }\n    }\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}