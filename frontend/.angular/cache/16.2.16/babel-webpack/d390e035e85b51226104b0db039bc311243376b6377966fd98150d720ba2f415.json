{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/datepicker\";\nimport * as i9 from \"@angular/material/table\";\nimport * as i10 from \"@angular/material/icon\";\nfunction PersonFormComponent_mat_error_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Nome \\u00E9 obrigat\\u00F3rio \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PersonFormComponent_mat_error_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Data de nascimento \\u00E9 obrigat\\u00F3ria \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PersonFormComponent_mat_error_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Endere\\u00E7o \\u00E9 obrigat\\u00F3rio \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PersonFormComponent_th_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 21);\n    i0.ɵɵtext(1, \"Nome\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PersonFormComponent_td_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const person_r14 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(person_r14.name);\n  }\n}\nfunction PersonFormComponent_th_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 21);\n    i0.ɵɵtext(1, \"Data de Nascimento\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PersonFormComponent_td_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const person_r15 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(2, 1, person_r15.birth_date, \"dd/MM/yyyy\"));\n  }\n}\nfunction PersonFormComponent_th_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 21);\n    i0.ɵɵtext(1, \"Endere\\u00E7o\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PersonFormComponent_td_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const person_r16 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(person_r16.address);\n  }\n}\nfunction PersonFormComponent_th_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 21);\n    i0.ɵɵtext(1, \"A\\u00E7\\u00F5es\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PersonFormComponent_td_41_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 22)(1, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function PersonFormComponent_td_41_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const person_r17 = restoredCtx.$implicit;\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.editPerson(person_r17));\n    });\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"edit\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function PersonFormComponent_td_41_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const person_r17 = restoredCtx.$implicit;\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.deletePerson(person_r17.id));\n    });\n    i0.ɵɵelementStart(5, \"mat-icon\");\n    i0.ɵɵtext(6, \"delete\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction PersonFormComponent_tr_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 25);\n  }\n}\nfunction PersonFormComponent_tr_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 26);\n  }\n}\nconst _c0 = function () {\n  return [\"name\", \"birth_date\", \"address\", \"actions\"];\n};\nexport let PersonFormComponent = /*#__PURE__*/(() => {\n  class PersonFormComponent {\n    constructor(fb, http, snackBar) {\n      this.fb = fb;\n      this.http = http;\n      this.snackBar = snackBar;\n      this.people = [];\n      this.editingId = null;\n      this.personForm = this.fb.group({\n        name: ['', Validators.required],\n        birth_date: ['', Validators.required],\n        address: ['', Validators.required]\n      });\n    }\n    ngOnInit() {\n      this.loadPeople();\n    }\n    loadPeople() {\n      this.http.get('http://localhost:8000/people/').subscribe(data => this.people = data, error => {\n        console.error('Erro ao carregar pessoas:', error);\n        this.showMessage('Erro ao carregar pessoas: ' + this.getErrorMessage(error));\n      });\n    }\n    onSubmit() {\n      if (this.personForm.valid) {\n        const formData = this.personForm.value;\n        console.log('Dados do formulário:', formData); // Debug\n        const personData = {\n          name: formData.name,\n          birth_date: formData.birth_date.toISOString().split('T')[0],\n          address: formData.address\n        };\n        console.log('Dados a serem enviados:', personData); // Debug\n        if (this.editingId) {\n          this.http.put(`http://localhost:8000/people/${this.editingId}`, personData).subscribe(() => {\n            this.loadPeople();\n            this.resetForm();\n            this.showMessage('Pessoa atualizada com sucesso!');\n          }, error => {\n            console.error('Erro ao atualizar pessoa:', error);\n            this.showMessage('Erro ao atualizar pessoa: ' + this.getErrorMessage(error));\n          });\n        } else {\n          this.http.post('http://localhost:8000/people/', personData).subscribe(() => {\n            this.loadPeople();\n            this.resetForm();\n            this.showMessage('Pessoa cadastrada com sucesso!');\n          }, error => {\n            console.error('Erro ao criar pessoa:', error);\n            this.showMessage('Erro ao cadastrar pessoa: ' + this.getErrorMessage(error));\n          });\n        }\n      }\n    }\n    editPerson(person) {\n      this.editingId = person.id;\n      this.personForm.patchValue({\n        name: person.name,\n        birth_date: new Date(person.birth_date),\n        address: person.address\n      });\n    }\n    deletePerson(id) {\n      if (confirm('Tem certeza que deseja excluir esta pessoa?')) {\n        this.http.delete(`http://localhost:8000/people/${id}`).subscribe(() => {\n          this.loadPeople();\n          this.showMessage('Pessoa excluída com sucesso!');\n        }, error => {\n          console.error('Erro ao excluir pessoa:', error);\n          this.showMessage('Erro ao excluir pessoa: ' + this.getErrorMessage(error));\n        });\n      }\n    }\n    resetForm() {\n      this.personForm.reset();\n      this.editingId = null;\n    }\n    showMessage(message) {\n      this.snackBar.open(message, 'Fechar', {\n        duration: 5000,\n        horizontalPosition: 'center',\n        verticalPosition: 'top'\n      });\n    }\n    getErrorMessage(error) {\n      if (error.error instanceof ErrorEvent) {\n        return error.error.message;\n      } else {\n        return error.error?.detail || error.message || 'Erro desconhecido';\n      }\n    }\n    static {\n      this.ɵfac = function PersonFormComponent_Factory(t) {\n        return new (t || PersonFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.MatSnackBar));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: PersonFormComponent,\n        selectors: [[\"app-person-form\"]],\n        decls: 44,\n        vars: 14,\n        consts: [[1, \"container\"], [1, \"form-container\", 3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"formControlName\", \"name\", \"required\", \"\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"birth_date\", \"required\", \"\", 3, \"matDatepicker\"], [\"matSuffix\", \"\", 3, \"for\"], [\"picker\", \"\"], [\"matInput\", \"\", \"formControlName\", \"address\", \"required\", \"\"], [1, \"button-container\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [\"mat-button\", \"\", \"type\", \"button\", 3, \"click\"], [\"mat-table\", \"\", 1, \"mat-elevation-z8\", 3, \"dataSource\"], [\"matColumnDef\", \"name\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"birth_date\"], [\"matColumnDef\", \"address\"], [\"matColumnDef\", \"actions\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"mat-icon-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"mat-icon-button\", \"\", \"color\", \"warn\", 3, \"click\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n        template: function PersonFormComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n            i0.ɵɵtext(2);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"form\", 1);\n            i0.ɵɵlistener(\"ngSubmit\", function PersonFormComponent_Template_form_ngSubmit_3_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelementStart(4, \"mat-form-field\", 2)(5, \"mat-label\");\n            i0.ɵɵtext(6, \"Nome\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(7, \"input\", 3);\n            i0.ɵɵtemplate(8, PersonFormComponent_mat_error_8_Template, 2, 0, \"mat-error\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(9, \"mat-form-field\", 2)(10, \"mat-label\");\n            i0.ɵɵtext(11, \"Data de Nascimento\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(12, \"input\", 5)(13, \"mat-datepicker-toggle\", 6)(14, \"mat-datepicker\", null, 7);\n            i0.ɵɵtemplate(16, PersonFormComponent_mat_error_16_Template, 2, 0, \"mat-error\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(17, \"mat-form-field\", 2)(18, \"mat-label\");\n            i0.ɵɵtext(19, \"Endere\\u00E7o\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(20, \"input\", 8);\n            i0.ɵɵtemplate(21, PersonFormComponent_mat_error_21_Template, 2, 0, \"mat-error\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(22, \"div\", 9)(23, \"button\", 10);\n            i0.ɵɵtext(24);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(25, \"button\", 11);\n            i0.ɵɵlistener(\"click\", function PersonFormComponent_Template_button_click_25_listener() {\n              return ctx.resetForm();\n            });\n            i0.ɵɵtext(26, \"Cancelar\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(27, \"h3\");\n            i0.ɵɵtext(28, \"Pessoas Cadastradas\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(29, \"table\", 12);\n            i0.ɵɵelementContainerStart(30, 13);\n            i0.ɵɵtemplate(31, PersonFormComponent_th_31_Template, 2, 0, \"th\", 14);\n            i0.ɵɵtemplate(32, PersonFormComponent_td_32_Template, 2, 1, \"td\", 15);\n            i0.ɵɵelementContainerEnd();\n            i0.ɵɵelementContainerStart(33, 16);\n            i0.ɵɵtemplate(34, PersonFormComponent_th_34_Template, 2, 0, \"th\", 14);\n            i0.ɵɵtemplate(35, PersonFormComponent_td_35_Template, 3, 4, \"td\", 15);\n            i0.ɵɵelementContainerEnd();\n            i0.ɵɵelementContainerStart(36, 17);\n            i0.ɵɵtemplate(37, PersonFormComponent_th_37_Template, 2, 0, \"th\", 14);\n            i0.ɵɵtemplate(38, PersonFormComponent_td_38_Template, 2, 1, \"td\", 15);\n            i0.ɵɵelementContainerEnd();\n            i0.ɵɵelementContainerStart(39, 18);\n            i0.ɵɵtemplate(40, PersonFormComponent_th_40_Template, 2, 0, \"th\", 14);\n            i0.ɵɵtemplate(41, PersonFormComponent_td_41_Template, 7, 0, \"td\", 15);\n            i0.ɵɵelementContainerEnd();\n            i0.ɵɵtemplate(42, PersonFormComponent_tr_42_Template, 1, 0, \"tr\", 19);\n            i0.ɵɵtemplate(43, PersonFormComponent_tr_43_Template, 1, 0, \"tr\", 20);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            const _r1 = i0.ɵɵreference(15);\n            let tmp_2_0;\n            let tmp_5_0;\n            let tmp_6_0;\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate(ctx.editingId ? \"Editar Pessoa\" : \"Cadastrar Nova Pessoa\");\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"formGroup\", ctx.personForm);\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx.personForm.get(\"name\")) == null ? null : tmp_2_0.hasError(\"required\"));\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"matDatepicker\", _r1);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"for\", _r1);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngIf\", (tmp_5_0 = ctx.personForm.get(\"birth_date\")) == null ? null : tmp_5_0.hasError(\"required\"));\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngIf\", (tmp_6_0 = ctx.personForm.get(\"address\")) == null ? null : tmp_6_0.hasError(\"required\"));\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"disabled\", !ctx.personForm.valid);\n            i0.ɵɵadvance(1);\n            i0.ɵɵtextInterpolate1(\" \", ctx.editingId ? \"Atualizar\" : \"Cadastrar\", \" \");\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"dataSource\", ctx.people);\n            i0.ɵɵadvance(13);\n            i0.ɵɵproperty(\"matHeaderRowDef\", i0.ɵɵpureFunction0(12, _c0));\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"matRowDefColumns\", i0.ɵɵpureFunction0(13, _c0));\n          }\n        },\n        dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i5.MatFormField, i5.MatLabel, i5.MatError, i5.MatSuffix, i6.MatInput, i7.MatButton, i7.MatIconButton, i8.MatDatepicker, i8.MatDatepickerInput, i8.MatDatepickerToggle, i9.MatTable, i9.MatHeaderCellDef, i9.MatHeaderRowDef, i9.MatColumnDef, i9.MatCellDef, i9.MatRowDef, i9.MatHeaderCell, i9.MatCell, i9.MatHeaderRow, i9.MatRow, i10.MatIcon, i4.DatePipe],\n        styles: [\".container[_ngcontent-%COMP%]{max-width:1200px;margin:0 auto;padding:20px}.form-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:16px;margin-bottom:32px}mat-form-field[_ngcontent-%COMP%]{width:100%}.button-container[_ngcontent-%COMP%]{display:flex;gap:16px;margin-top:16px}table[_ngcontent-%COMP%]{width:100%;margin-top:20px}.mat-column-actions[_ngcontent-%COMP%]{width:120px;text-align:center}h2[_ngcontent-%COMP%]{color:#333;margin-bottom:24px}h3[_ngcontent-%COMP%]{color:#666;margin-top:32px;margin-bottom:16px}\"]\n      });\n    }\n  }\n  return PersonFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}