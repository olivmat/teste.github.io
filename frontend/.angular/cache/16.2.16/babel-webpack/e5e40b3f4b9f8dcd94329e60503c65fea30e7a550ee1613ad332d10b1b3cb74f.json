{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport Chart from 'chart.js/auto';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { CadastroCriancaComponent } from '../cadastro-crianca/cadastro-crianca.component';\nexport let DashboardComponent = class DashboardComponent {\n  constructor(http, criancaService, dialog) {\n    this.http = http;\n    this.criancaService = criancaService;\n    this.dialog = dialog;\n    this.totalCriancas = 0;\n    this.presentesUltimoDia = 0;\n    this.quantidade2a6 = 0;\n    this.quantidade7a11 = 0;\n    this.pessoas = [];\n    this.presencas = [];\n  }\n  ngOnInit() {\n    this.carregarDados();\n  }\n  ngAfterViewInit() {\n    setTimeout(() => this.renderizarGraficoPresencasPorDia(), 500);\n  }\n  abrirModalCadastro() {\n    const dialogRef = this.dialog.open(CadastroCriancaComponent, {\n      width: '600px',\n      data: {}\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.carregarDados();\n      }\n    });\n  }\n  carregarDados() {\n    this.criancaService.getCriancas().subscribe(criancas => {\n      this.totalCriancas = criancas.length;\n      this.quantidade2a6 = criancas.filter(c => c.idade >= 2 && c.idade <= 6).length;\n      this.quantidade7a11 = criancas.filter(c => c.idade >= 7 && c.idade <= 11).length;\n    });\n  }\n  getTotalCriancas() {\n    this.http.get('http://localhost:8000/people/').subscribe(data => {\n      this.totalCriancas = data.length;\n    });\n  }\n  getPresentesUltimoDia() {\n    this.http.get('http://localhost:8000/presences/').subscribe(data => {\n      if (data.length === 0) {\n        this.presentesUltimoDia = 0;\n        return;\n      }\n      // Encontrar a data mais recente\n      const datas = data.map(p => p.date);\n      const ultimaData = datas.sort().reverse()[0];\n      // Contar quantos presentes na última data\n      this.presentesUltimoDia = data.filter(p => p.date === ultimaData).length;\n    });\n  }\n  getPessoasEPresencas() {\n    this.http.get('http://localhost:8000/people/').subscribe(pessoas => {\n      this.pessoas = pessoas;\n      this.http.get('http://localhost:8000/presences/').subscribe(presencas => {\n        this.presencas = presencas;\n        this.calcularFaixasEtarias();\n        this.renderizarGraficoPresencasPorDia();\n      });\n    });\n  }\n  calcularFaixasEtarias() {\n    if (!this.presencas.length) {\n      this.quantidade2a6 = 0;\n      this.quantidade7a11 = 0;\n      return;\n    }\n    // Descobrir a data mais recente\n    const datas = this.presencas.map(p => p.date);\n    const ultimaData = datas.sort().reverse()[0];\n    // Filtrar presenças do último dia\n    const presencasUltimoDia = this.presencas.filter(p => p.date === ultimaData);\n    // Contar por faixa etária\n    let count2a6 = 0;\n    let count7a11 = 0;\n    presencasUltimoDia.forEach(presenca => {\n      const pessoa = this.pessoas.find(p => p.id === presenca.person_id);\n      if (pessoa && pessoa.idade !== undefined && pessoa.idade !== null) {\n        if (pessoa.idade >= 2 && pessoa.idade <= 6) count2a6++;\n        if (pessoa.idade >= 7 && pessoa.idade <= 11) count7a11++;\n      }\n    });\n    this.quantidade2a6 = count2a6;\n    this.quantidade7a11 = count7a11;\n  }\n  renderizarGraficoPresencasPorDia() {\n    if (!this.presencas || this.presencas.length === 0) return;\n    // Agrupar presenças por data\n    const presencasPorData = {};\n    this.presencas.forEach(p => {\n      if (!presencasPorData[p.date]) presencasPorData[p.date] = 0;\n      presencasPorData[p.date]++;\n    });\n    const labels = Object.keys(presencasPorData).sort();\n    const data = labels.map(date => presencasPorData[date]);\n    const ctx = document.getElementById('presencasPorDiaChart')?.getContext('2d');\n    if (!ctx) return;\n    new Chart(ctx, {\n      type: 'bar',\n      data: {\n        labels,\n        datasets: [{\n          label: 'Presenças por dia',\n          data,\n          backgroundColor: 'rgba(30, 136, 229, 0.7)',\n          borderColor: 'rgba(30, 136, 229, 1)',\n          borderWidth: 1\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        layout: {\n          padding: {\n            top: 30\n          }\n        },\n        plugins: {\n          legend: {\n            display: false\n          },\n          datalabels: {\n            anchor: 'end',\n            align: 'start',\n            color: '#222',\n            font: {\n              weight: 'bold',\n              size: 14\n            },\n            offset: 4,\n            formatter: function (value) {\n              return value;\n            }\n          }\n        },\n        scales: {\n          x: {\n            title: {\n              display: true,\n              text: 'Data'\n            },\n            grid: {\n              display: false\n            }\n          },\n          y: {\n            beginAtZero: true,\n            title: {\n              display: false\n            },\n            ticks: {\n              display: false\n            },\n            grid: {\n              display: false\n            },\n            border: {\n              display: false\n            }\n          }\n        }\n      },\n      plugins: [ChartDataLabels]\n    });\n  }\n};\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})], DashboardComponent);","map":{"version":3,"names":["Component","Chart","ChartDataLabels","CadastroCriancaComponent","DashboardComponent","constructor","http","criancaService","dialog","totalCriancas","presentesUltimoDia","quantidade2a6","quantidade7a11","pessoas","presencas","ngOnInit","carregarDados","ngAfterViewInit","setTimeout","renderizarGraficoPresencasPorDia","abrirModalCadastro","dialogRef","open","width","data","afterClosed","subscribe","result","getCriancas","criancas","length","filter","c","idade","getTotalCriancas","get","getPresentesUltimoDia","datas","map","p","date","ultimaData","sort","reverse","getPessoasEPresencas","calcularFaixasEtarias","presencasUltimoDia","count2a6","count7a11","forEach","presenca","pessoa","find","id","person_id","undefined","presencasPorData","labels","Object","keys","ctx","document","getElementById","getContext","type","datasets","label","backgroundColor","borderColor","borderWidth","options","responsive","maintainAspectRatio","layout","padding","top","plugins","legend","display","datalabels","anchor","align","color","font","weight","size","offset","formatter","value","scales","x","title","text","grid","y","beginAtZero","ticks","border","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\mathe\\Documents\\Kids\\Cadastro Local Kids\\frontend\\src\\app\\dashboard\\dashboard.component.ts"],"sourcesContent":["import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport Chart from 'chart.js/auto';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CadastroCriancaComponent } from '../cadastro-crianca/cadastro-crianca.component';\nimport { CriancaService } from '../services/crianca.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit, AfterViewInit {\n  totalCriancas: number = 0;\n  presentesUltimoDia: number = 0;\n  quantidade2a6: number = 0;\n  quantidade7a11: number = 0;\n  pessoas: any[] = [];\n  presencas: any[] = [];\n\n  constructor(\n    private http: HttpClient,\n    private criancaService: CriancaService,\n    private dialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {\n    this.carregarDados();\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => this.renderizarGraficoPresencasPorDia(), 500);\n  }\n\n  abrirModalCadastro() {\n    const dialogRef = this.dialog.open(CadastroCriancaComponent, {\n      width: '600px',\n      data: {}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.carregarDados();\n      }\n    });\n  }\n\n  carregarDados() {\n    this.criancaService.getCriancas().subscribe(criancas => {\n      this.totalCriancas = criancas.length;\n      this.quantidade2a6 = criancas.filter(c => c.idade >= 2 && c.idade <= 6).length;\n      this.quantidade7a11 = criancas.filter(c => c.idade >= 7 && c.idade <= 11).length;\n    });\n  }\n\n  getTotalCriancas() {\n    this.http.get<any[]>('http://localhost:8000/people/').subscribe(data => {\n      this.totalCriancas = data.length;\n    });\n  }\n\n  getPresentesUltimoDia() {\n    this.http.get<any[]>('http://localhost:8000/presences/').subscribe(data => {\n      if (data.length === 0) {\n        this.presentesUltimoDia = 0;\n        return;\n      }\n      // Encontrar a data mais recente\n      const datas = data.map(p => p.date);\n      const ultimaData = datas.sort().reverse()[0];\n      // Contar quantos presentes na última data\n      this.presentesUltimoDia = data.filter(p => p.date === ultimaData).length;\n    });\n  }\n\n  getPessoasEPresencas() {\n    this.http.get<any[]>('http://localhost:8000/people/').subscribe(pessoas => {\n      this.pessoas = pessoas;\n      this.http.get<any[]>('http://localhost:8000/presences/').subscribe(presencas => {\n        this.presencas = presencas;\n        this.calcularFaixasEtarias();\n        this.renderizarGraficoPresencasPorDia();\n      });\n    });\n  }\n\n  calcularFaixasEtarias() {\n    if (!this.presencas.length) {\n      this.quantidade2a6 = 0;\n      this.quantidade7a11 = 0;\n      return;\n    }\n    // Descobrir a data mais recente\n    const datas = this.presencas.map(p => p.date);\n    const ultimaData = datas.sort().reverse()[0];\n    // Filtrar presenças do último dia\n    const presencasUltimoDia = this.presencas.filter(p => p.date === ultimaData);\n    // Contar por faixa etária\n    let count2a6 = 0;\n    let count7a11 = 0;\n    presencasUltimoDia.forEach(presenca => {\n      const pessoa = this.pessoas.find(p => p.id === presenca.person_id);\n      if (pessoa && pessoa.idade !== undefined && pessoa.idade !== null) {\n        if (pessoa.idade >= 2 && pessoa.idade <= 6) count2a6++;\n        if (pessoa.idade >= 7 && pessoa.idade <= 11) count7a11++;\n      }\n    });\n    this.quantidade2a6 = count2a6;\n    this.quantidade7a11 = count7a11;\n  }\n\n  renderizarGraficoPresencasPorDia() {\n    if (!this.presencas || this.presencas.length === 0) return;\n    // Agrupar presenças por data\n    const presencasPorData: { [data: string]: number } = {};\n    this.presencas.forEach(p => {\n      if (!presencasPorData[p.date]) presencasPorData[p.date] = 0;\n      presencasPorData[p.date]++;\n    });\n    const labels = Object.keys(presencasPorData).sort();\n    const data = labels.map(date => presencasPorData[date]);\n    const ctx = (document.getElementById('presencasPorDiaChart') as HTMLCanvasElement)?.getContext('2d');\n    if (!ctx) return;\n    new Chart(ctx, {\n      type: 'bar',\n      data: {\n        labels,\n        datasets: [{\n          label: 'Presenças por dia',\n          data,\n          backgroundColor: 'rgba(30, 136, 229, 0.7)',\n          borderColor: 'rgba(30, 136, 229, 1)',\n          borderWidth: 1\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        layout: {\n          padding: {\n            top: 30\n          }\n        },\n        plugins: {\n          legend: { display: false },\n          datalabels: {\n            anchor: 'end',\n            align: 'start',\n            color: '#222',\n            font: { weight: 'bold', size: 14 },\n            offset: 4,\n            formatter: function(value: any) { return value; }\n          }\n        },\n        scales: {\n          x: {\n            title: { display: true, text: 'Data' },\n            grid: { display: false }\n          },\n          y: {\n            beginAtZero: true,\n            title: { display: false },\n            ticks: { display: false },\n            grid: { display: false },\n            border: { display: false }\n          }\n        }\n      },\n      plugins: [ChartDataLabels]\n    });\n  }\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}