{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport Chart from 'chart.js/auto';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { PersonModalComponent } from '../person-form/person-modal/person-modal.component';\nexport let DashboardComponent = class DashboardComponent {\n  constructor(http, dialog, router, criancaService, eventoService, responsavelService) {\n    this.http = http;\n    this.dialog = dialog;\n    this.router = router;\n    this.criancaService = criancaService;\n    this.eventoService = eventoService;\n    this.responsavelService = responsavelService;\n    this.totalCriancas = 0;\n    this.totalEventos = 0;\n    this.totalResponsaveis = 0;\n    this.presentesUltimoDia = 0;\n    this.quantidade2a6 = 0;\n    this.quantidade7a12 = 0;\n    this.quantidade13a17 = 0;\n    this.pessoas = [];\n    this.presencas = [];\n  }\n  ngOnInit() {\n    this.carregarTotais();\n    this.getPresentesUltimoDia();\n    this.getPessoasEPresencas();\n  }\n  ngAfterViewInit() {\n    setTimeout(() => this.renderizarGraficoPresencasPorDia(), 500);\n  }\n  carregarTotais() {\n    this.criancaService.getCriancas().subscribe(criancas => {\n      this.totalCriancas = criancas.length;\n    });\n    this.eventoService.getEventos().subscribe(eventos => {\n      this.totalEventos = eventos.length;\n    });\n    this.responsavelService.getResponsaveis().subscribe(responsaveis => {\n      this.totalResponsaveis = responsaveis.length;\n    });\n  }\n  getPresentesUltimoDia() {\n    this.http.get('http://localhost:8000/presences/').subscribe(data => {\n      if (data.length === 0) {\n        this.presentesUltimoDia = 0;\n        return;\n      }\n      // Encontrar a data mais recente\n      const datas = data.map(p => p.date);\n      const ultimaData = datas.sort().reverse()[0];\n      // Contar quantos presentes na última data\n      this.presentesUltimoDia = data.filter(p => p.date === ultimaData).length;\n    });\n  }\n  getPessoasEPresencas() {\n    this.http.get('http://localhost:8000/people/').subscribe(pessoas => {\n      this.pessoas = pessoas;\n      this.http.get('http://localhost:8000/presences/').subscribe(presencas => {\n        this.presencas = presencas;\n        this.calcularFaixasEtarias();\n        this.renderizarGraficoPresencasPorDia();\n      });\n    });\n  }\n  calcularFaixasEtarias() {\n    if (!this.presencas.length) {\n      this.quantidade2a6 = 0;\n      this.quantidade7a12 = 0;\n      this.quantidade13a17 = 0;\n      return;\n    }\n    // Descobrir a data mais recente\n    const datas = this.presencas.map(p => p.date);\n    const ultimaData = datas.sort().reverse()[0];\n    // Filtrar presenças do último dia\n    const presencasUltimoDia = this.presencas.filter(p => p.date === ultimaData);\n    // Contar por faixa etária\n    let count2a6 = 0;\n    let count7a12 = 0;\n    let count13a17 = 0;\n    presencasUltimoDia.forEach(presenca => {\n      const pessoa = this.pessoas.find(p => p.id === presenca.person_id);\n      if (pessoa && pessoa.idade !== undefined && pessoa.idade !== null) {\n        if (pessoa.idade >= 2 && pessoa.idade <= 6) count2a6++;\n        if (pessoa.idade >= 7 && pessoa.idade <= 12) count7a12++;\n        if (pessoa.idade >= 13 && pessoa.idade <= 17) count13a17++;\n      }\n    });\n    this.quantidade2a6 = count2a6;\n    this.quantidade7a12 = count7a12;\n    this.quantidade13a17 = count13a17;\n  }\n  renderizarGraficoPresencasPorDia() {\n    if (!this.presencas || this.presencas.length === 0) return;\n    // Agrupar presenças por data\n    const presencasPorData = {};\n    this.presencas.forEach(p => {\n      if (!presencasPorData[p.date]) presencasPorData[p.date] = 0;\n      presencasPorData[p.date]++;\n    });\n    const rawLabels = Object.keys(presencasPorData).sort();\n    // Formatar datas para dd/mmm\n    const labels = rawLabels.map(dateStr => {\n      const d = new Date(dateStr);\n      return d.toLocaleDateString('pt-BR', {\n        day: '2-digit',\n        month: 'short'\n      }).replace('.', '');\n    });\n    const data = rawLabels.map(date => presencasPorData[date]);\n    const ctx = document.getElementById('presencasPorDiaChart')?.getContext('2d');\n    if (!ctx) return;\n    new Chart(ctx, {\n      type: 'bar',\n      data: {\n        labels,\n        datasets: [{\n          label: 'Presenças por dia',\n          data,\n          backgroundColor: 'rgba(30, 136, 229, 0.7)',\n          borderColor: 'rgba(30, 136, 229, 1)',\n          borderWidth: 1\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        layout: {\n          padding: {\n            top: 30\n          }\n        },\n        plugins: {\n          legend: {\n            display: false\n          },\n          datalabels: {\n            anchor: 'end',\n            align: 'start',\n            color: '#222',\n            font: {\n              weight: 'bold',\n              size: 14\n            },\n            offset: 4,\n            formatter: function (value) {\n              return value;\n            }\n          }\n        },\n        scales: {\n          x: {\n            title: {\n              display: true,\n              text: 'Data'\n            },\n            grid: {\n              display: false\n            }\n          },\n          y: {\n            beginAtZero: true,\n            title: {\n              display: false\n            },\n            ticks: {\n              display: false\n            },\n            grid: {\n              display: false\n            },\n            border: {\n              display: false\n            }\n          }\n        }\n      },\n      plugins: [ChartDataLabels]\n    });\n  }\n  openPersonModal() {\n    const dialogRef = this.dialog.open(PersonModalComponent, {\n      width: '600px',\n      data: {}\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.getPessoasEPresencas();\n      }\n    });\n  }\n  navegarPara(rota) {\n    this.router.navigate([rota]);\n  }\n};\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})], DashboardComponent);","map":{"version":3,"names":["Component","Chart","ChartDataLabels","PersonModalComponent","DashboardComponent","constructor","http","dialog","router","criancaService","eventoService","responsavelService","totalCriancas","totalEventos","totalResponsaveis","presentesUltimoDia","quantidade2a6","quantidade7a12","quantidade13a17","pessoas","presencas","ngOnInit","carregarTotais","getPresentesUltimoDia","getPessoasEPresencas","ngAfterViewInit","setTimeout","renderizarGraficoPresencasPorDia","getCriancas","subscribe","criancas","length","getEventos","eventos","getResponsaveis","responsaveis","get","data","datas","map","p","date","ultimaData","sort","reverse","filter","calcularFaixasEtarias","presencasUltimoDia","count2a6","count7a12","count13a17","forEach","presenca","pessoa","find","id","person_id","idade","undefined","presencasPorData","rawLabels","Object","keys","labels","dateStr","d","Date","toLocaleDateString","day","month","replace","ctx","document","getElementById","getContext","type","datasets","label","backgroundColor","borderColor","borderWidth","options","responsive","maintainAspectRatio","layout","padding","top","plugins","legend","display","datalabels","anchor","align","color","font","weight","size","offset","formatter","value","scales","x","title","text","grid","y","beginAtZero","ticks","border","openPersonModal","dialogRef","open","width","afterClosed","result","navegarPara","rota","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\mathe\\Documents\\Kids\\Cadastro Local Kids\\frontend\\src\\app\\dashboard\\dashboard.component.ts"],"sourcesContent":["import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport Chart from 'chart.js/auto';\r\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { PersonModalComponent } from '../person-form/person-modal/person-modal.component';\r\nimport { Router } from '@angular/router';\r\nimport { CriancaService } from '../crianca/crianca.service';\r\nimport { EventoService } from '../evento/evento.service';\r\nimport { ResponsavelService } from '../responsavel/responsavel.service';\r\n\r\ninterface Crianca {\r\n  id: number;\r\n  name: string;\r\n  // adicione outros campos conforme necessário\r\n}\r\n\r\ninterface Evento {\r\n  id: number;\r\n  name: string;\r\n  // adicione outros campos conforme necessário\r\n}\r\n\r\ninterface Responsavel {\r\n  id: number;\r\n  name: string;\r\n  // adicione outros campos conforme necessário\r\n}\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit, AfterViewInit {\r\n  totalCriancas: number = 0;\r\n  totalEventos: number = 0;\r\n  totalResponsaveis: number = 0;\r\n  presentesUltimoDia: number = 0;\r\n  quantidade2a6: number = 0;\r\n  quantidade7a12: number = 0;\r\n  quantidade13a17: number = 0;\r\n  pessoas: any[] = [];\r\n  presencas: any[] = [];\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private dialog: MatDialog,\r\n    private router: Router,\r\n    private criancaService: CriancaService,\r\n    private eventoService: EventoService,\r\n    private responsavelService: ResponsavelService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.carregarTotais();\r\n    this.getPresentesUltimoDia();\r\n    this.getPessoasEPresencas();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    setTimeout(() => this.renderizarGraficoPresencasPorDia(), 500);\r\n  }\r\n\r\n  carregarTotais(): void {\r\n    this.criancaService.getCriancas().subscribe((criancas: Crianca[]) => {\r\n      this.totalCriancas = criancas.length;\r\n    });\r\n\r\n    this.eventoService.getEventos().subscribe((eventos: Evento[]) => {\r\n      this.totalEventos = eventos.length;\r\n    });\r\n\r\n    this.responsavelService.getResponsaveis().subscribe((responsaveis: Responsavel[]) => {\r\n      this.totalResponsaveis = responsaveis.length;\r\n    });\r\n  }\r\n\r\n  getPresentesUltimoDia(): void {\r\n    this.http.get<any[]>('http://localhost:8000/presences/').subscribe(data => {\r\n      if (data.length === 0) {\r\n        this.presentesUltimoDia = 0;\r\n        return;\r\n      }\r\n      // Encontrar a data mais recente\r\n      const datas = data.map(p => p.date);\r\n      const ultimaData = datas.sort().reverse()[0];\r\n      // Contar quantos presentes na última data\r\n      this.presentesUltimoDia = data.filter(p => p.date === ultimaData).length;\r\n    });\r\n  }\r\n\r\n  getPessoasEPresencas(): void {\r\n    this.http.get<any[]>('http://localhost:8000/people/').subscribe(pessoas => {\r\n      this.pessoas = pessoas;\r\n      this.http.get<any[]>('http://localhost:8000/presences/').subscribe(presencas => {\r\n        this.presencas = presencas;\r\n        this.calcularFaixasEtarias();\r\n        this.renderizarGraficoPresencasPorDia();\r\n      });\r\n    });\r\n  }\r\n\r\n  calcularFaixasEtarias() {\r\n    if (!this.presencas.length) {\r\n      this.quantidade2a6 = 0;\r\n      this.quantidade7a12 = 0;\r\n      this.quantidade13a17 = 0;\r\n      return;\r\n    }\r\n    // Descobrir a data mais recente\r\n    const datas = this.presencas.map(p => p.date);\r\n    const ultimaData = datas.sort().reverse()[0];\r\n    // Filtrar presenças do último dia\r\n    const presencasUltimoDia = this.presencas.filter(p => p.date === ultimaData);\r\n    // Contar por faixa etária\r\n    let count2a6 = 0;\r\n    let count7a12 = 0;\r\n    let count13a17 = 0;\r\n    presencasUltimoDia.forEach(presenca => {\r\n      const pessoa = this.pessoas.find(p => p.id === presenca.person_id);\r\n      if (pessoa && pessoa.idade !== undefined && pessoa.idade !== null) {\r\n        if (pessoa.idade >= 2 && pessoa.idade <= 6) count2a6++;\r\n        if (pessoa.idade >= 7 && pessoa.idade <= 12) count7a12++;\r\n        if (pessoa.idade >= 13 && pessoa.idade <= 17) count13a17++;\r\n      }\r\n    });\r\n    this.quantidade2a6 = count2a6;\r\n    this.quantidade7a12 = count7a12;\r\n    this.quantidade13a17 = count13a17;\r\n  }\r\n\r\n  renderizarGraficoPresencasPorDia() {\r\n    if (!this.presencas || this.presencas.length === 0) return;\r\n    // Agrupar presenças por data\r\n    const presencasPorData: { [data: string]: number } = {};\r\n    this.presencas.forEach(p => {\r\n      if (!presencasPorData[p.date]) presencasPorData[p.date] = 0;\r\n      presencasPorData[p.date]++;\r\n    });\r\n    const rawLabels = Object.keys(presencasPorData).sort();\r\n    // Formatar datas para dd/mmm\r\n    const labels = rawLabels.map(dateStr => {\r\n      const d = new Date(dateStr);\r\n      return d.toLocaleDateString('pt-BR', { day: '2-digit', month: 'short' }).replace('.', '');\r\n    });\r\n    const data = rawLabels.map(date => presencasPorData[date]);\r\n    const ctx = (document.getElementById('presencasPorDiaChart') as HTMLCanvasElement)?.getContext('2d');\r\n    if (!ctx) return;\r\n    new Chart(ctx, {\r\n      type: 'bar',\r\n      data: {\r\n        labels,\r\n        datasets: [{\r\n          label: 'Presenças por dia',\r\n          data,\r\n          backgroundColor: 'rgba(30, 136, 229, 0.7)',\r\n          borderColor: 'rgba(30, 136, 229, 1)',\r\n          borderWidth: 1\r\n        }]\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        layout: {\r\n          padding: {\r\n            top: 30\r\n          }\r\n        },\r\n        plugins: {\r\n          legend: { display: false },\r\n          datalabels: {\r\n            anchor: 'end',\r\n            align: 'start',\r\n            color: '#222',\r\n            font: { weight: 'bold', size: 14 },\r\n            offset: 4,\r\n            formatter: function(value: any) { return value; }\r\n          }\r\n        },\r\n        scales: {\r\n          x: {\r\n            title: { display: true, text: 'Data' },\r\n            grid: { display: false }\r\n          },\r\n          y: {\r\n            beginAtZero: true,\r\n            title: { display: false },\r\n            ticks: { display: false },\r\n            grid: { display: false },\r\n            border: { display: false }\r\n          }\r\n        }\r\n      },\r\n      plugins: [ChartDataLabels]\r\n    });\r\n  }\r\n\r\n  openPersonModal(): void {\r\n    const dialogRef = this.dialog.open(PersonModalComponent, {\r\n      width: '600px',\r\n      data: {}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.getPessoasEPresencas();\r\n      }\r\n    });\r\n  }\r\n\r\n  navegarPara(rota: string): void {\r\n    this.router.navigate([rota]);\r\n  }\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}